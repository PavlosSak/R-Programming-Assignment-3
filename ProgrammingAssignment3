##R Programming Assignment 3 

##Part 1 - best function

best <- function(state, outcome) {
	
	outcomes = c("heart attack", "heart failure", "pneumonia")
    if( outcome %in% outcomes == FALSE ) stop("invalid outcome")

	data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")

	data <- data[c(2, 7, 11, 17, 23)]
	names(data)[1] <- "name"
	names(data)[2] <- "state"
	names(data)[3] <- "heart attack"
	names(data)[4] <- "heart failure"
	names(data)[5] <- "pneumonia"

    states <- data[, 2]
    states <- unique(states)
    if( state %in% states == FALSE ) stop("invalid state")

    data <- data[data$state==state & data[outcome] != 'Not Available', ]
    vals <- data[, outcome]
    rowNum <- which.min(vals)

    data[rowNum, ]$name
}





##Part 2 - rankhospital function

rankhospital <- function(state, outcome, num) {
  
    data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
    data <- data[c(2, 7, 11, 17, 23)]
    names(data)[1] <- "name"
    names(data)[2] <- "state"
    names(data)[3] <- "heart attack"
    names(data)[4] <- "heart failure"
    names(data)[5] <- "pneumonia"

    outcomes = c("heart attack", "heart failure", "pneumonia")
    if( outcome %in% outcomes == FALSE ) stop("invalid outcome")
   
    states <- data[, 2]
    states <- unique(states)
    if( state %in% states == FALSE ) stop("invalid state")

    if( num != "best" && num != "worst" && num%%1 != 0 ) stop("invalid num")

    data <- data[data$state==state & data[outcome] != 'Not Available', ]

    data[outcome] <- as.data.frame(sapply(data[outcome], as.numeric))
    data <- data[order(data$name, decreasing = FALSE), ]
    data <- data[order(data[outcome], decreasing = FALSE), ]
   
    vals <- data[, outcome]
    if( num == "best" ) {
        rowNum <- which.min(vals)
    } else if( num == "worst" ) {
        rowNum <- which.max(vals)
    } else {
        rowNum <- num
    }

    data[rowNum, ]$name
}




##Part 3 - rankall function

rankall <- function(outcome, num = "best") {

  data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")[,c(2,7,11,17,23)]
  
  if(! (outcome == "heart attack" || outcome == "heart failure" || outcome == "pneumonia") ) {
    stop("invalid outcome")
  }
  
  if(class(num) == "character"){
    if (! (num == "best" || num == "worst")){
      stop("invalid number")
    }
  }
  if(outcome == "heart attack") {
    data = data[,c(1,2,3)]
  } else if(outcome == "heart failure") {
    data = data[,c(1,2,4)]
  } else if(outcome == "pneumonia") {
    data = data[,c(1,2,5)]
  }
  names(data)[3] = "Deaths"
  data[, 3] = suppressWarnings( as.numeric(data[, 3]) )
  
  data = data[!is.na(data$Deaths),]
  
  splited = split(data, data$State)
  ans = lapply(splited, function(x, num) {
    
    x = x[order(x$Deaths, x$Hospital.Name),]
    
    if(class(num) == "character") {
      if(num == "best") {
        return (x$Hospital.Name[1])
      }
      
##when submitting the "rankall" part, do not put the solution, just the code!
      
##Done!!! :D
